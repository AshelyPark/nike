<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ch.nike.mapper.ReviewMapper">
	
	<!-- ReviewCon -->
	<select id="productReview" parameterType="hashmap" resultType="Review">
		select	*
		from	review
		where	product_no = #{productNo}
			and email = #{email}
			and color = #{color}
	</select>
	<select id="countReview" resultType="integer">
		select	nvl(max(review_no),0) + 1 reviewNo
		from	review
	</select>
	<insert id="insert" parameterType="review">
		insert	into	review
				values	(#{reviewNo},
						#{productNo},
						#{email},
						#{content},
						#{star},
						#{color},
						sysdate,
						'N')
	</insert>
	<update id="deleteReview" parameterType="integer">
		update	review
		set		review_del = 'Y'
		where	review_no = #{reviewNo}
	</update>
	<select id="reviewInfo" parameterType="integer" resultType="Review">
		select	*
		from	review
		where	review_no = #{reviewNo}
	</select>
	<update id="update" parameterType="review">
		update	review
		set		star = #{star},
				content = #{content}
		where	review_no = #{reviewNo}
	</update>
	
	
	
	
	<!-- ProductCon -->
	<select id="selectProductReview" parameterType="integer" resultType="Review">
		select	distinct r.*,
				m.name
		from	review r,
				member m
		where	r.email=m.email
			and product_no = #{product_no} 
			and review_del = 'N'
	</select>
	
	
	
	<!-- AccountCon -->
	<select id="memberReview" parameterType="String" resultType="Review">
		select	r.*,
				p.product_name
		from	review r,
				product p
		where	p.product_no = r.product_no
			and r.email = #{email}
			and review_del = 'N'
	</select>
	
	
	
	<!-- AdminCon -->
	<select id="reviewselect" parameterType="string" resultType="review">
		select	r.*,
				p.product_name
		from	review r,
				product p
		where	p.product_no = r.product_no
			and r.email = #{email}
	</select>
	<select id="getTotal" resultType="integer"> <!-- 페이징용 전체 주문 카운트 by창률 -->
		select 	count(*) 
		from	review
	</select>
	<select id="paginglist" parameterType="pagingbean" resultType="review">
		select 	* 
		from 	(select a.*, rowNum rn from (select * from review 
			<where>
				<if test="keyword!=null and keyword!=''">
						${keyword} like '%' || #{search} || '%'
				</if>
			</where>
		order by review_no desc)a) 
		where 	rn between #{startRow} 
			and #{endRow}
	</select>
	<update id="admindeleteReview" parameterType="integer">
		update 	review 
		set 	review_del = 'Y' 
		where 	review_no = #{reviewNo}			
	</update>
</mapper>