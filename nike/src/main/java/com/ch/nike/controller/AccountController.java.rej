diff a/nike/src/main/java/com/ch/nike/controller/AccountController.java b/nike/src/main/java/com/ch/nike/controller/AccountController.java	(rejected hunks)
@@ -82,23 +82,23 @@
 		model.addAttribute("list", list);
 		return "account/wishList";
 	}
-	@RequestMapping("/account/cartList.do")		// 로그인한 회원의 장바구니 불러오기 by선희
-	public String cartList(Model model, HttpSession session) {
-		String email = (String) session.getAttribute("email");
-		List<Cart> cartList = cs.selectCart(email);
-		List<Product> list = new ArrayList<>();
-		for (Cart cart:cartList) {
-			if (cart != null) {
-				Product product = ps.selectCartThum(cart.getProductDetailNo());
-				if (product != null) {
-					list.add(product);
-				}
-			}
-		}
-		model.addAttribute("cart", cartList);
-		model.addAttribute("list", list);
-		return "account/cartList";
-	}
+//	@RequestMapping("/account/cartList.do")		// 로그인한 회원의 장바구니 불러오기 by선희
+//	public String cartList(Model model, HttpSession session) {
+//		String email = (String) session.getAttribute("email");
+//		List<Cart> cartList = cs.selectCart(email);
+//		List<Product> list = new ArrayList<>();
+//		for (Cart cart:cartList) {
+//			if (cart != null) {
+//				Product product = ps.selectCartThum(cart.getProductDetailNo());
+//				if (product != null) {
+//					list.add(product);
+//				}
+//			}
+//		}
+//		model.addAttribute("cart", cartList);
+//		model.addAttribute("list", list);
+//		return "account/cartList";
+//	}
 	@RequestMapping("/account/orders.do")		// 로그인한 회원의 주문내역 불러오기 by선희
 	public String orders(Model model, HttpSession session) {
 		String email = (String) session.getAttribute("email");
